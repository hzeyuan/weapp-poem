<style lang="less">
.item_detail_content {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.item_title {
  font-size: 45rpx;
  color: #1c2438;
  padding-top: 50rpx;
  padding-left: 50rpx;
  padding-right: 50rpx;
  flex-wrap: wrap;
  text-align: center;
}

.item_author {
  font-size: 36rpx;
  color: #495060;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  padding-top: 15rpx;
}

.view_content {
  padding-top: 20rpx;
  padding-left: 50rpx;
  padding-right: 50rpx;
  line-height: 70rpx;
}

.item_content {
  font-size: 38rpx;
  color: #495060;
  flex-wrap: wrap;
}

.view_author {
  display: flex;
  flex-direction: column;
  width: 100%;
  padding-top: 100rpx;
}

.view_author_top {
  display: flex;
  justify-content: space-between;
  padding: 15rpx 50rpx;
}

.view_author_title {
  font-size: 30rpx;
  color: #2d8cf0;
}

.view_author_more {
  display: flex;
  flex-direction: row;
  font-size: 30rpx;
  color: #80848f;
}

.view_author_intro {
  display: -webkit-box;
  word-break: break-all;
  text-overflow: ellipsis;
  overflow: hidden;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 4;
  padding-top: 15rpx;
  padding-left: 50rpx;
  padding-right: 50rpx;
  font-size: 30rpx;
  color: #495060;
}

.view_temp {
  height: 100rpx;
}
</style>
<template>
  <view class="item_detail_content">
    <!--标题-->
    <text class="item_title">{{ jsonValue.item_title }}</text>
    <!--作者-->
    <text wx:if="{{jsonValue.item_author}}" class="item_author">{{
      jsonValue.item_author
    }}</text>
    <!--内容-->
    <view class="view_content">
      <text class="item_content">{{ jsonValue.item_content }}</text>
    </view>
    <!--作者信息-->
    <view wx:if="{{author}}" class="view_author">
      <view class="view_author_top">
        <view class="view_author_title">作者</view>
        <view class="view_author_more" bindtap="tapMore">
          <view>更多</view>
          <i-icon type="enter" size="12" color="#80848F" />
        </view>
      </view>
      <view class="view_author_intro">{{ author.intro }}</view>
      <view class="view_temp"></view>
    </view>
    <i-icon type="systemprompt" size="48" bindtap="read" color="#80848F" />
    <i-toast id="toast" />
    <i-button bindtap="toggleTranslate">简繁转换</i-button>
  </view>
</template>

<script>
import wepy from 'wepy';
const AV = require('leancloud-storage');
const { $Toast } = require('../../components/iview/base/index');
import { Translate } from '../../libs/wordsTranslate.min.js';
export default class ItemDetail extends wepy.page {
  config = {
    navigationBarTitleText: '',
    usingComponents: {
      'i-icon': '../../components/iview/icon/index',
      'i-toast': '../../components/iview/toast/index',
      'i-button': '../../components/iview/button/index',
    },
  };

  components = {};

  data = {
    jsonValue: {},
    author: null,
    isTranslatable: true,
  };

  computed = {};

  methods = {
    // 切换简繁体
    toggleTranslate() {
      wx.showLoading({
        title: '转换中',
      });
      console.log('123');
      const translate = new Translate();
      console.log('this.jsonValue', this.jsonValue);
      for (let k in this.jsonValue) {
        console.log('jsonValue', k);
        this.jsonValue[k] = this.isTranslatable
          ? translate.ToSimplifiedChinese(this.jsonValue[k])
          : translate.ToTraditionalChinese(this.jsonValue[k]);
      }

      this.isTranslatable = !this.isTranslatable;

      console.log('this.item', this.item);
      wx.hideLoading();
    },
    tapCard() {
      this.getItem();
    },
    read() {
      wx.showLoading({
        title: '生成中',
      });
      console.log('read');
      wx.request({
        url: 'http://ovooa.com/API/yuyin/api.php',
        method: 'get',
        data: {
          msg: this.jsonValue.item_content,
          speed: 3,
        },
        success: (res) => {
          const innerAudioContext = wx.createInnerAudioContext();
          innerAudioContext.autoplay = true;
          console.log('reee', res);
          innerAudioContext.src = res.data.url.replace('http://', 'https://');
          innerAudioContext.onPlay();
        },
        fail: () => {
          wx.showToast('播放失败');
        },
        complete: () => {
          wx.hideLoading();
        },
      });
    },
    tapMore() {
      let jsonValue = {
        author_name: this.author.name,
        author_intro: this.author.intro,
        author_id: this.author.id,
        author_type: this.jsonValue.item_type === 0 ? 0 : 1,
      };
      let jsonText = escape(JSON.stringify(jsonValue));
      wepy.navigateTo({
        url: '/pages/author/author_detail?value=' + jsonText,
      });
    },
  };

  events = {};

  async onLoad(option) {
    if (option.value) {
      this.jsonValue = JSON.parse(unescape(option.value));
    }
    if (this.jsonValue.item_author_id > 0) {
      this.getAuthor();
    }
  }

  /**
   * 获取作者信息
   */
  getAuthor() {
    $Toast({
      content: '加载中...',
      type: 'loading',
    });
    let that = this;
    let query = null;
    if (that.jsonValue.item_type === 0) {
      // 诗作者
      query = new AV.Query('poetry_author');
    } else if (that.jsonValue.item_type === 1) {
      query = new AV.Query('poems_author');
    }
    if (query) {
      query.equalTo('id', this.jsonValue.item_author_id);
      query
        .find()
        .then(function (results) {
          console.log(results);
          if (results.length > 0) {
            that.author = results[0].toJSON();
            if (that.jsonValue.item_type === 1) {
              that.author.intro = that.author.intro_l;
            }
          }
          that.$apply();
          $Toast.hide();
        })
        .catch(function (error) {
          $Toast.hide();
          console.error(error);
        });
    }
  }
}
</script>
